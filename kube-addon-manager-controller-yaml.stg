/*
 * Mandatory:
 *
 * vars.addonManager.image.name
 * vars.addonManager.image.version
 * vars.addonManager.limits.cpu
 * vars.addonManager.limits.memory
 * vars.addonManager.requests.cpu
 * vars.addonManager.requests.memory
 */

kube-addon-manager-controller-yaml(parent, vars) ::= <<

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-addon-manager
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kube-addon-manager
  namespace: kube-system
  labels:
    component: kube-addon-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kube-addon-manager
  namespace: kube-system

---

apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: kube-addon-manager
  namespace: kube-system
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ''
  labels:
    component: kube-addon-manager
spec:
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: kube-addon-manager
      namespace: kube-system
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
      labels:
        component: kube-addon-manager
    spec:
      hostNetwork: true
      serviceAccountName: kube-addon-manager
      automountServiceAccountToken: true
      containers:
      - name: kube-addon-manager
        image: <vars.addonManager.image.name>:<vars.addonManager.image.version>
        command:
        - /bin/bash
        - -c
        - exec bash /opt/kube-addons.sh
        resources:
          <if(vars.addonManager.limits)>
          limits:
            cpu: <vars.addonManager.limits.cpu>
            memory: <vars.addonManager.limits.memory>
          <endif>
          <if(vars.addonManager.requests)>
          requests:
            cpu: <vars.addonManager.requests.cpu>
            memory: <vars.addonManager.requests.memory>
          <endif>
        volumeMounts:
        - mountPath: /etc/kubernetes/
          name: addons
          readOnly: true
      volumes:
      - name: addons
        hostPath:
          path: /etc/kubernetes/
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: Exists

---

>>
